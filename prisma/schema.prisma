generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"          // âœ… change from "sqlite"
  url      = env("DATABASE_URL")
}

model Work {
  id        Int       @id @default(autoincrement())
  slug      String    @unique
  title     String
  summary   String?
  category  Category  @default(ESSAY)
  bodyMdx   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  highlights Highlight[]
  summaries FeedbackSummary[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  workId    Int
  blockId   String   // DOM block id (e.g., p-3)
  start     Int      // start offset within block text
  end       Int      // end offset within block text
  text      String   // comment body
  author    String?
  createdAt DateTime @default(now())
  work      Work     @relation(fields: [workId], references: [id], onDelete: Cascade)
}

model Highlight {
  id        Int      @id @default(autoincrement())
  workId    Int
  blockId   String
  start     Int
  end       Int
  reaction  String   // e.g., "love", "insightful", free text tag
  createdAt DateTime @default(now())
  work      Work     @relation(fields: [workId], references: [id], onDelete: Cascade)
}

model FeedbackSummary {
  id        Int      @id @default(autoincrement())
  workId    Int
  period    String   // e.g., "rolling-7d"
  content   String   // AI-generated synthesis markdown
  createdAt DateTime @default(now())
  work      Work     @relation(fields: [workId], references: [id], onDelete: Cascade)
}

enum Category {
  STORY
  ESSAY
  CODE
  INTRO
  BACKGROUND
  METHODOLOGY
  RESULTS
  DISCUSSION
  PHD
  RESOURCES
  FRIENDS
}

num ChiefRole {
WARRIOR
BUILDER
INVIGILATOR
TEACHER
}